import{aA as q,e as v,y as V,fC as D,fD as I,fE as F,n as z,a4 as B,s as N}from"./index.3224a022.js";const C=new q({classBreaksDef:"class-breaks-definition",uniqueValueDef:"unique-value-definition"});let x=class extends B{constructor(){super(...arguments),this.baseSymbol=null,this.colorRamp=null,this.type=null}};v([V({type:D,json:{write:!0}})],x.prototype,"baseSymbol",void 0),v([V({types:I,json:{read:{reader:F},write:!0}})],x.prototype,"colorRamp",void 0),v([V({json:{read:C.read,write:C.write}})],x.prototype,"type",void 0),x=v([z("esri.rest.support.ClassificationDefinition")],x);const T=x,S=new q({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),$=new q({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let y=class extends T{constructor(){super(...arguments),this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null,this.type="class-breaks-definition"}set standardDeviationInterval(a){this.classificationMethod==="standard-deviation"&&this._set("standardDeviationInterval",a)}set definedInterval(a){this.classificationMethod==="defined-interval"&&this._set("definedInterval",a)}};v([V({json:{write:!0}})],y.prototype,"breakCount",void 0),v([V({json:{write:!0}})],y.prototype,"classificationField",void 0),v([V({type:String,json:{read:S.read,write:S.write}})],y.prototype,"classificationMethod",void 0),v([V({json:{write:!0}})],y.prototype,"normalizationField",void 0),v([V({json:{read:$.read,write:$.write}})],y.prototype,"normalizationType",void 0),v([V({value:null,json:{write:!0}})],y.prototype,"standardDeviationInterval",null),v([V({value:null,json:{write:!0}})],y.prototype,"definedInterval",null),v([V()],y.prototype,"type",void 0),y=v([z("esri.rest.support.ClassBreaksDefinition")],y);const G=y,E=N.getLogger("esri.rest.support.generateRendererUtils");function M(a,r){return Number(a.toFixed(r))}function H(a){const{normalizationTotal:r}=a;return{classBreaks:L(a),normalizationTotal:r}}function L(a){const r=a.definition,{classificationMethod:n,breakCount:i,normalizationType:u,definedInterval:h}=r,f=[];let l=a.values;if(l.length===0)return[];l=l.sort((s,c)=>s-c);const d=l[0],p=l[l.length-1];if(n==="equal-interval")if(l.length>=i){const s=(p-d)/i;let c=d;for(let t=1;t<i;t++){const e=M(d+t*s,6);f.push({minValue:c,maxValue:e,label:b(c,e,u)}),c=e}f.push({minValue:c,maxValue:p,label:b(c,p,u)})}else l.forEach(s=>{f.push({minValue:s,maxValue:s,label:b(s,s,u)})});else if(n==="natural-breaks"){const s=R(l),c=a.valueFrequency||s.valueFrequency,t=_(s.uniqueValues,c,i);let e=d;for(let o=1;o<i;o++)if(s.uniqueValues.length>o){const m=M(s.uniqueValues[t[o]],6);f.push({minValue:e,maxValue:m,label:b(e,m,u)}),e=m}f.push({minValue:e,maxValue:p,label:b(e,p,u)})}else if(n==="quantile")if(l.length>=i&&d!==p){let s=d,c=Math.ceil(l.length/i),t=0;for(let e=1;e<i;e++){let o=c+t-1;o>l.length&&(o=l.length-1),o<0&&(o=0),f.push({minValue:s,maxValue:l[o],label:b(s,l[o],u)}),s=l[o],t+=c,c=Math.ceil((l.length-t)/(i-e))}f.push({minValue:s,maxValue:p,label:b(s,p,u)})}else{let s=-1;for(let c=0;c<l.length;c++){const t=l[c];t!==s&&(s=t,f.push({minValue:s,maxValue:t,label:b(s,t,u)}),s=t)}}else if(n==="standard-deviation"){const s=O(l),c=P(l,s);if(c===0)f.push({minValue:l[0],maxValue:l[0],label:b(l[0],l[0],u)});else{const t=U(d,p,i,s,c)*c;let e=0,o=d;for(let g=i;g>=1;g--){const k=M(s-(g-.5)*t,6);f.push({minValue:o,maxValue:k,label:b(o,k,u)}),o=k,e++}let m=M(s+.5*t,6);f.push({minValue:o,maxValue:m,label:b(o,m,u)}),o=m,e++;for(let g=1;g<=i;g++)m=e===2*i?p:M(s+(g+.5)*t,6),f.push({minValue:o,maxValue:m,label:b(o,m,u)}),o=m,e++}}else if(n==="defined-interval"){if(!h)return f;const s=l[0],c=l[l.length-1],t=Math.ceil((c-s)/h);let e=s;for(let o=1;o<t;o++){const m=M(s+o*h,6);f.push({minValue:e,maxValue:m,label:b(e,m,u)}),e=m}f.push({minValue:e,maxValue:c,label:b(e,c,u)})}return f}function b(a,r,n){let i=null;return i=a===r?n&&n==="percent-of-total"?a+"%":a.toString():n&&n==="percent-of-total"?a+"% - "+r+"%":a+" - "+r,i}function R(a){const r=[],n=[];let i=Number.MIN_VALUE,u=1,h=-1;for(let f=0;f<a.length;f++){const l=a[f];l===i?(u++,n[h]=u):l!==null&&(r.push(l),i=l,u=1,n.push(u),h++)}return{uniqueValues:r,valueFrequency:n}}function _(a,r,n){const i=a.length,u=[];n>i&&(n=i);for(let f=0;f<n;f++)u.push(Math.round(f*i/n-1));u.push(i-1);let h=j(u,a,r,n);return A(h.mean,h.sdcm,u,a,r,n)&&(h=j(u,a,r,n)),u}function j(a,r,n,i){let u=[],h=[],f=[],l=0;const d=[],p=[];for(let e=0;e<i;e++){const o=w(e,a,r,n);d.push(o.sbMean),p.push(o.sbSdcm),l+=p[e]}let s,c=l,t=!0;for(;t||l<c;){t=!1,u=[];for(let e=0;e<i;e++)u.push(a[e]);for(let e=0;e<i;e++)for(let o=a[e]+1;o<=a[e+1];o++)if(s=r[o],e>0&&o!==a[e+1]&&Math.abs(s-d[e])>Math.abs(s-d[e-1]))a[e]=o;else if(e<i-1&&a[e]!==o-1&&Math.abs(s-d[e])>Math.abs(s-d[e+1])){a[e+1]=o-1;break}c=l,l=0,h=[],f=[];for(let e=0;e<i;e++){h.push(d[e]),f.push(p[e]);const o=w(e,a,r,n);d[e]=o.sbMean,p[e]=o.sbSdcm,l+=p[e]}}if(l>c){for(let e=0;e<i;e++)a[e]=u[e],d[e]=h[e],p[e]=f[e];l=c}return{mean:d,sdcm:p}}function A(a,r,n,i,u,h){let f=0,l=0,d=0,p=0,s=!0;for(let c=0;c<2&&s;c++){c===0&&(s=!1);for(let t=0;t<h-1;t++)for(;n[t+1]+1!==n[t+2];){n[t+1]=n[t+1]+1;const e=w(t,n,i,u);d=e.sbMean,f=e.sbSdcm;const o=w(t+1,n,i,u);if(p=o.sbMean,l=o.sbSdcm,!(f+l<r[t]+r[t+1])){n[t+1]=n[t+1]-1;break}r[t]=f,r[t+1]=l,a[t]=d,a[t+1]=p,s=!0}for(let t=h-1;t>0;t--)for(;n[t]!==n[t-1]+1;){n[t]=n[t]-1;const e=w(t-1,n,i,u);d=e.sbMean,f=e.sbSdcm;const o=w(t,n,i,u);if(p=o.sbMean,l=o.sbSdcm,!(f+l<r[t-1]+r[t])){n[t]=n[t]+1;break}r[t-1]=f,r[t]=l,a[t-1]=d,a[t]=p,s=!0}}return s}function U(a,r,n,i,u){let h=Math.max(i-a,r-i)/u/n;return h=h>=1?1:h>=.5?.5:.25,h}function O(a){let r=0;for(let n=0;n<a.length;n++)r+=a[n];return r/=a.length,r}function P(a,r){let n=0;for(let i=0;i<a.length;i++){const u=a[i];n+=(u-r)*(u-r)}return n/=a.length,Math.sqrt(n)}function w(a,r,n,i){let u=0,h=0;for(let d=r[a]+1;d<=r[a+1];d++){const p=i[d];u+=n[d]*p,h+=p}h<=0&&E.warn("Exception in Natural Breaks calculation");const f=u/h;let l=0;for(let d=r[a]+1;d<=r[a+1];d++)l+=i[d]*(n[d]-f)**2;return{sbMean:f,sbSdcm:l}}export{H as a,G as l};
