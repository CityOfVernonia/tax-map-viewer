import{e8 as S,q as w,A as B,B as j,eE as h,E as y,w as x,bI as U,af as c,c as p,e as a,y as r,n as T,a2 as k,aA as I,C as P,O as R,r as M,t as f}from"./index.3224a022.js";var m;const d=new S("0/0/0",0,0,0,void 0);let g=m=class extends w(B(j(k))){constructor(){super(...arguments),this.tileInfo=h.create({spatialReference:y.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new x(-20037508342787e-6,-2003750834278e-5,2003750834278e-5,20037508342787e-6,y.WebMercator),this.spatialReference=y.WebMercator}getTileBounds(t,e,s,o){const n=o||U();return d.level=t,d.row=e,d.col=s,d.extent=n,this.tileInfo.updateTileInfo(d),d.extent=void 0,n}fetchTile(t,e,s,o={}){const{signal:n}=o,l=this.getTileUrl(t,e,s),u={responseType:"image",signal:n,query:{...this.refreshParameters}};return c(l!=null?l:"",u).then(b=>b.data)}async fetchImageBitmapTile(t,e,s,o={}){const{signal:n}=o;if(this.fetchTile!==m.prototype.fetchTile)return createImageBitmap(await this.fetchTile(t,e,s,o));const l=this.getTileUrl(t,e,s),u={responseType:"blob",signal:n,query:{...this.refreshParameters}},{data:b}=await c(l!=null?l:"",u);return createImageBitmap(b)}getTileUrl(){throw new p("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};a([r({type:h})],g.prototype,"tileInfo",void 0),a([r({type:["show","hide"]})],g.prototype,"listMode",void 0),a([r({readOnly:!0,value:"base-tile"})],g.prototype,"type",void 0),a([r({nonNullable:!0})],g.prototype,"fullExtent",void 0),a([r()],g.prototype,"spatialReference",void 0),g=m=a([T("esri.layers.BaseTileLayer")],g);const $=g,v=new I({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"}),A="https://dev.virtualearth.net";let i=class extends w(P(R($))){constructor(t){super(t),this.type="bing-maps",this.tileInfo=new h({size:[256,256],dpi:96,origin:{x:-20037508342787e-6,y:20037508342787e-6,spatialReference:y.WebMercator},spatialReference:y.WebMercator,lods:[{level:1,resolution:78271.5169639999,scale:295828763795777e-6},{level:2,resolution:39135.7584820001,scale:147914381897889e-6},{level:3,resolution:19567.8792409999,scale:73957190948944e-6},{level:4,resolution:9783.93962049996,scale:36978595474472e-6},{level:5,resolution:4891.96981024998,scale:18489297737236e-6},{level:6,resolution:2445.98490512499,scale:9244648868618e-6},{level:7,resolution:1222.99245256249,scale:4622324434309e-6},{level:8,resolution:611.49622628138,scale:2311162217155e-6},{level:9,resolution:305.748113140558,scale:1155581108577e-6},{level:10,resolution:152.874056570411,scale:577790.554289},{level:11,resolution:76.4370282850732,scale:288895.277144},{level:12,resolution:38.2185141425366,scale:144447.638572},{level:13,resolution:19.1092570712683,scale:72223.819286},{level:14,resolution:9.55462853563415,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.38865713397468,scale:9027.977411},{level:17,resolution:1.19432856685505,scale:4513.988705},{level:18,resolution:.597164283559817,scale:2256.994353},{level:19,resolution:.298582141647617,scale:1128.497176},{level:20,resolution:.1492910708238085,scale:564.248588}]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(t){this._set("bingMetadata",t)}get copyright(){return M(this.bingMetadata)?this.bingMetadata.copyright:null}get operationalLayerType(){return v.toJSON(this.style)}get bingLogo(){return M(this.bingMetadata)?this.bingMetadata.brandLogoUri:null}load(t){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then(()=>this._getMetadata())):this.addResolvingPromise(Promise.reject(new p("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(t,e,s){if(!this.loaded||f(this.bingMetadata))return null;const o=this.bingMetadata.resourceSets[0].resources[0],n=o.imageUrlSubdomains[e%o.imageUrlSubdomains.length],l=this._getQuadKey(t,e,s);return o.imageUrl.replace("{subdomain}",n).replace("{quadkey}",l)}async fetchAttributionData(){return this.load().then(()=>f(this.bingMetadata)?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map(t=>({attribution:t.attribution,coverageAreas:t.coverageAreas.map(e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]}))}))})}_getMetadata(){const t={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return c(`${A}/REST/v1/Imagery/Metadata/${t}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then(e=>{const s=e.data;if(s.statusCode!==200)throw new p("bingmapslayer:getmetadata",s.statusDescription);if(this.bingMetadata=s,this.bingMetadata.resourceSets.length===0)throw new p("bingmapslayer:getmetadata","no bing resourcesets");if(this.bingMetadata.resourceSets[0].resources.length===0)throw new p("bingmapslayer:getmetadata","no bing resources")}).catch(e=>{throw new p("bingmapslayer:getmetadata",e.message)})}_getPortalBingKey(){var t;return c((t=this.portalUrl)!=null?t:"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then(e=>{if(!e.data.bingKey)throw new p("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey}).catch(e=>{throw new p("bingmapslayer:getportalbingkey",e.message)})}_getQuadKey(t,e,s){let o="";for(let n=t;n>0;n--){let l=0;const u=1<<n-1;(s&u)!=0&&(l+=1),(e&u)!=0&&(l+=2),o+=l.toString()}return o}};a([r({json:{read:!1,write:!1},value:null})],i.prototype,"bingMetadata",null),a([r({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],i.prototype,"type",void 0),a([r({type:h})],i.prototype,"tileInfo",void 0),a([r({type:String,readOnly:!0,json:{read:!1,write:!1}})],i.prototype,"copyright",null),a([r({type:String,json:{write:!1,read:!1}})],i.prototype,"key",void 0),a([r({type:v.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:v.read}}})],i.prototype,"style",void 0),a([r({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],i.prototype,"operationalLayerType",null),a([r({type:String,json:{write:!1,read:!1}})],i.prototype,"culture",void 0),a([r({type:String,json:{write:!1,read:!1}})],i.prototype,"region",void 0),a([r({type:String,json:{write:!0,read:!0}})],i.prototype,"portalUrl",void 0),a([r({type:Boolean,json:{write:!1,read:!1}})],i.prototype,"hasAttributionData",void 0),a([r({type:String,readOnly:!0})],i.prototype,"bingLogo",null),i=a([T("esri.layers.BingMapsLayer")],i);const L=i;export{L as default};
